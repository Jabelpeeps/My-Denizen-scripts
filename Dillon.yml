#
# This script is a repeatable kill quest, with formatted NPC responses, and random chat phrases for added 'ambience'.
#
# To assign this script to an NPC just select the NPC in-game and do '/npc assign --set DillonZombieQuest'
# 
# All sub_scripts and flags used in the script contain the NPC's name, "Dillon", so to make another similar NPC:-
#      1) copy and rename this file
#      2) Do a 'search and replace' on 'Dillon' to replace it with the name of your new NPC.
#      3) adjust chat format, chat phrases & listener targets to your preferred values.
#
Dillon:
  type: format
  debug: false
  format: "<gold>-[<green>Dillon<gold>]- <white><text>" 

DillonZombieQuest:
  Type: Assignment
  debug: false
  actions:
    on assignment:
    - trigger name:proximity state:true radius:5
    - trigger name:chat state:true radius:5
    
    on enter proximity:
    # initial greeting with variations depending on whether player has met npc before.
    - if '!<player.has_flag[Dillon Zombie Quest]>' {
      - engage 3s
      - narrate format:Dillon "Greetings <green><player.name.display.replace[~]><white>, I don't believe we've met before?"
      - wait 1
      - narrate format:Dillon "My name is <green>Dillon<white>, and I have lived here for years"
      - wait 1
      - narrate format:Dillon "I offer rewards for the killing of <green>Zombies<white>."
      - wait 10t
      - flag player 'Dillon Zombie Quest:Quest not accepted'
      - if <player.flag[QuestList].as_list||li@> !contain 'Dillon Zombie Quest' flag player 'QuestList:->:Dillon Zombie Quest'
      - disengage }
      # if listener is complete, give reward and set flag with timed expiry to allow players to repeat the quest when it clears.
      else if '<player.flag[Dillon Zombie Quest]>' == 'Quest complete - return to Dillon for reward' {
      - narrate format:Dillon "Felicitations <green><player.name.display.replace[~]><white>!"
      - wait 1
      - random {
        - narrate format:Dillon "The <green>green<white> blood on you shows me you fought hard."
        - narrate format:Dillon "I'm glad a few more of the undead menace are no-more!"
        - narrate format:Dillon "I smell rotten flesh, someone's been busy..." }
      - wait 1
      - narrate format:Dillon "As promised, here is your reward... <green> 45 Emeralds!"
      - wait 10t
      - narrate format:Dillon "Come back tomorrow if you want another go"
      - give emerald qty:45
      - flag player 'Dillon Zombie Quest:Completed' 
      - flag player 'Dillon Zombie Quest Cooldown' duration:23h
      - queue clear }
      else {
        - narrate format:Dillon "Greetings <green><player.name.display.replace[~]><white>, how is the <green>Zombie<white> cull going?"
        - wait 1
        - random {
          - narrate format:Dillon "Does any creature look more unhealthy?"
          - narrate format:Dillon "I really hate them, they're just so smelly."
          - narrate format:Dillon "Prime candidates for a cremation they are!"
          - narrate format:Dillon "How do they walk so fast when they're dead?"
          - narrate format:Dillon "They all look sick to me, they need to go!" }
        - wait 10t
        }
      - narrate "<blue>---------> <gray>Talk to <green>Dillon<gray> in server chat."
      
    on click:
    - engage 30t
    - narrate format:Dillon "Don't shuffle arround like that! Speak up!"
    - wait 10t
    - narrate "<blue>---------> <gray>To use server chat (do '<green>/ch s<gray>' or '<green>/s <&lt>message<&gt><gray>')"
    - disengage
       
    on chat:
    # the commands here stop the chat appearing the usual format, and displays it in a way that mimics the pm formatting.
    - determine passively cancelled
    - narrate "<gray>[ <yellow>You<gray> -> <yellow>Dillon<gray> ] '<white><context.message><gray>'"
    - wait 30t
    
    # during cooldown period, give time remaining + some chat, before ending the script.
    - if '<player.has_flag[Dillon Zombie Quest Cooldown]>' {
      - narrate format:Dillon "<green><player.name.display.replace[~]><white>, thanks for helping kill those <green>Zombies<white>."
      - wait 10t
      - narrate format:Dillon "I'll be able to offer you another reward in <green>'<player.flag[Dillon Zombie Quest Cooldown].expiration.formatted>'"
      - queue clear }
      
    # The remaining sections all check the status of quest flag, and present info +/- options depending on progress through the quest.
    # Firstly, a section to run if the flag is empty (not set).
    - if '<player.flag[Dillon Zombie Quest]||Quest not accepted>' == 'Quest not accepted' {
      - flag player 'Dillon Zombie Quest:Awaiting response...'
      - random {
        - narrate format:Dillon "There's an <green>explosion<white> in the <green>Zombie<white> population!"
        - narrate format:Dillon "The <green>Zombie<white> problem is really bugging me"
        - narrate format:Dillon "I have too many <green>emeralds<white>, and want to give you some."
        - narrate format:Dillon "I need a fearless hunter for a task." }
      - wait 1
      - inject locally StateQuest }
      
    # Next a section to play when a player returns having already complete the quest. (and the cooldown has expired.)
    - if '<player.flag[Dillon Zombie Quest]>' == 'Completed' {
      - flag player 'Dillon Zombie Quest:Awaiting response...'
      - narrate format:Dillon "Are you ready to slay some more <green>Zombies<white>?"
      - wait 10t
      - narrate "<blue>---------> <gray>Reply in chat with:- '<green>Yes<gray>' or '<green>No<gray>'"
      - queue clear }
      
    # The next section is active after the section above has finished, and will respond in various ways depending on the player's chat.  
    # It starts by checking that the quest flag is set correctly. (i.e. has the value it was flagged in the previous section.)
    - if '<player.flag[Dillon Zombie Quest]>' == 'Awaiting response...' {
      # If player says "Yes", set flag and start listener.
      - if '<context.message.matches[.*((?i)(yes|yus|ya|yup|sure|np)).*]>' {
        - flag player 'Dillon Zombie Quest:Quest in Progress'
        - narrate format:Dillon "Great! Come back to me for your <green>reward<white> when you"
        - wait 10t
        - narrate format:Dillon "have slain <green>25<white> of those shambling <green>green<white> undead!"
        - listen kill 'ID:DillonKill10Zombies' 'SCRIPT:DillonListenerComplete' 'type:entity' 'target:Zombie' 'qty:25' }
        
        # If player says "No", clear Quest flag and delivery a random taunt.
        else if '<context.message.matches[.*((?i)(no+|nope|na|yikes)).*]>' {
          - flag player 'Dillon Zombie Quest:Quest not accepted'
          - inject locally RandomTaunt }
          
        # The next lines repeat the prompts, or the full quest question, if the answer does not trigger the "Yes" or "No" sections.
        else if '<context.message.matches[.*((?i)(repeat|pardon|what|again)).*]>' inject locally StateQuest
        else {
          - narrate "<blue>---------> <gray>Reply with:- '<green>Yes<gray>' or '<green>No<gray>'"
          - wait 10t
          - narrate "<blue>---------> <gray>or '<green>Repeat<gray>' (to be reminded of the question)" }
      - queue clear }
    
    # if listener is active, say random encouragement text.
    - if '<player.flag[Dillon Zombie Quest]>' == 'Quest in Progress' {
      - narrate format:Dillon "You haven't killed enough <green>Zombies<white> yet, come"
      - wait 10t
      - narrate format:Dillon "back for your reward when you have killed <green>25<white>."
      - queue clear }
        
    on exit proximity:
    # the first section removes the 'Awaiting response...' state of the quest flag if the player walks away at that stage, and then taunts them a bit...
    - if '<player.flag[Dillon Zombie Quest]>' == 'Awaiting response...' {
      - flag player 'Dillon Zombie Quest:Quest not accepted'
      - narrate format:Dillon "You heading off? I take it that means <green>'No'"
      - wait 1
      - inject locally RandomTaunt }
       
    # This section narrates a random farewell message to players who are at other stages of the quest.
    - wait 1
    - random {
      - narrate format:Dillon "<&o>Remember, there are many ways to kill Zombies!"
      - narrate format:Dillon "<&o>Do you like the smell of Zombies in the morning?"
      - narrate format:Dillon "<&o>Have you tried killing Zombies in a boat?"
      - narrate format:Dillon "<&o>There are lots of things to hate about Zombies."
      - narrate format:Dillon "<&o>If you see your Mum, say 'Hi' from me!" }
  
  # a couple of short 'local' scripts that avoid having to repeat these lines in several other places.
  StateQuest:  
  - narrate format:Dillon "If you kill <green>25 Zombies<white>, I'll give you a reward!"
  - wait 10t
  - narrate format:Dillon "Will you accept this quest <green><player.name.display.replace[~]><white>?"
  - wait 10t
  - narrate "<blue>---------> <gray>Reply in chat with:- '<green>Yes<gray>' or '<green>No<gray>'"
  - queue clear 
  
  RandomTaunt:
  - random {
    - narrate format:Dillon "Do you need to get your sword sharpened?"
    - narrate format:Dillon "Is the string on your bow a bit loose?"
    - narrate format:Dillon "Having your armour polished, are you?"
    - narrate format:Dillon "You're not scared of Zombies are you?"
    - narrate format:Dillon "Come back when you're feeling brave enough." }
  - queue clear   
  
DillonListenerComplete:
  Type: Task
  debug: false
  Script:
  - narrate "<gold>-[<green>Quest<gold>]-<white> Well done! You have killed <green>10 Zombies<white>!" 
  - wait 10t
  - narrate "<gold>-[<green>Quest<gold>]-<white> Return to <green>Dillon<white> for your reward!"
  - flag player 'Dillon Zombie Quest:Quest complete - return to Dillon for reward'

